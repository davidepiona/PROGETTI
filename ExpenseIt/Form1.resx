<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iP/Z
</value>
  </data>
</root>